name: '[Util] Import & Sync Data'
run-name: >
  ${{ (github.event.client_payload.auth0_sync_tenant || inputs.auth0_sync_tenant) && format('Syncing Auth0 {0} tenant', github.event.client_payload.auth0_dest_tenant || inputs.auth0_dest_tenant) || '' }}
  ${{ (github.event.client_payload.firebase_sync_rc || inputs.firebase_sync_rc) && format(' Syncing Firebase {0}', github.event.client_payload.firebase_dest_env || inputs.firebase_dest_env) || '' }}

on:
  repository_dispatch:
    types: 
      - Trigger-Import-Sync-Data

  workflow_dispatch:
    inputs:
      auth0_sync_tenant:
        description: "Sync AUTH0 Tenants"
        required: true
        default: false
        type: boolean
      auth0_dest_tenant:
        description: 'Auth0 Target Tenant'
        required: true
        type: choice
        options:
          - stage
          - prod
      firebase_sync_rc:
        description: "Sync Firebase Remote Config"
        required: true
        type: boolean
        default: false
      firebase_dest_env:
        description: 'Firebase Target Environment'  
        required: true
        type: choice
        options:
          - prod

jobs:
  set_env:
    name: 'Setup Inputs'
    uses: nabarun-ngo/ngo-nabarun-templates/.github/workflows/Setup-Env.yml@main
    with:
      inputs: ${{ toJson(inputs) }}
      client_payload: ${{ toJson(github.event.client_payload) }}

  sync_data:
    name: 'Sync Data'
    needs: set_env
    uses: nabarun-ngo/ngo-nabarun-templates/.github/workflows/Sync-Data.yml@main
    with:
      auth0_target_env: ${{ fromJson(needs.set_env.outputs.variables).auth0_dest_tenant }}
      firebase_target_env: ${{ fromJson(needs.set_env.outputs.variables).firebase_dest_env }}
      sync_auth0: ${{ fromJson(needs.set_env.outputs.variables).auth0_sync_tenant }}
      sync_firebaseRC: ${{ fromJson(needs.set_env.outputs.variables).firebase_sync_rc }}
    secrets:
      auth0_source_config : ${{ secrets.AUTH0_CONFIG_SOURCE }}
      auth0_dest_config : ${{ secrets.AUTH0_CONFIG }}
      firebase_service_account_source: ${{ secrets.FB_SA_KEY_SOURCE }}
      firebase_service_account_target: ${{ secrets.FB_SA_KEY }}
      firebase_source_project: ${{ secrets.FB_PROJECT_ID_SOURCE }}
      firebase_target_project: ${{ secrets.FB_PROJECT_ID }}

  sync_summary:
    name: '📊 Synchronization Summary'
    runs-on: ubuntu-latest
    needs: [set_env, sync_data]
    if: always()
    steps:
      - name: 📋 Generate Sync Report
        id: summary
        run: |
          echo "## 🔄 Data Synchronization Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Auth0 Sync Status
          if [[ "${{ fromJson(needs.set_env.outputs.variables).auth0_sync_tenant }}" == "true" ]]; then
            if [[ "${{ needs.sync_data.result }}" == "success" ]]; then
              echo "### ✅ Auth0 Tenant Synchronization" >> $GITHUB_STEP_SUMMARY
              echo "- **Source Tenant**: ${{ fromJson(needs.set_env.outputs.variables).auth0_source_tenant }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Destination Tenant**: ${{ fromJson(needs.set_env.outputs.variables).auth0_dest_tenant }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Status**: Successfully synchronized" >> $GITHUB_STEP_SUMMARY
            else
              echo "### ❌ Auth0 Tenant Synchronization" >> $GITHUB_STEP_SUMMARY
              echo "- **Source Tenant**: ${{ fromJson(needs.set_env.outputs.variables).auth0_source_tenant }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Destination Tenant**: ${{ fromJson(needs.set_env.outputs.variables).auth0_dest_tenant }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Status**: Synchronization failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "### ⏭️ Auth0 Tenant Synchronization" >> $GITHUB_STEP_SUMMARY
            echo "- **Status**: Not selected for synchronization" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Firebase Sync Status
          if [[ "${{ fromJson(needs.set_env.outputs.variables).firebase_sync_rc }}" == "true" ]]; then
            if [[ "${{ needs.sync_data.result }}" == "success" ]]; then
              echo "### ✅ Firebase Remote Config Synchronization" >> $GITHUB_STEP_SUMMARY
              echo "- **Source Environment**: ${{ fromJson(needs.set_env.outputs.variables).firebase_source_env }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Destination Environment**: ${{ fromJson(needs.set_env.outputs.variables).firebase_dest_env }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Status**: Successfully synchronized" >> $GITHUB_STEP_SUMMARY
            else
              echo "### ❌ Firebase Remote Config Synchronization" >> $GITHUB_STEP_SUMMARY
              echo "- **Source Environment**: ${{ fromJson(needs.set_env.outputs.variables).firebase_source_env }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Destination Environment**: ${{ fromJson(needs.set_env.outputs.variables).firebase_dest_env }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Status**: Synchronization failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "### ⏭️ Firebase Remote Config Synchronization" >> $GITHUB_STEP_SUMMARY
            echo "- **Status**: Not selected for synchronization" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Execution URLs" >> $GITHUB_STEP_SUMMARY
          echo "- **This Workflow Run**: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          
          # Add Auth0 management URLs if Auth0 sync was performed
          if [[ "${{ fromJson(needs.set_env.outputs.variables).auth0_sync_tenant }}" == "true" ]]; then
            if [[ "${{ fromJson(needs.set_env.outputs.variables).auth0_dest_tenant }}" == "prod" ]]; then
              echo "- **Auth0 Production Dashboard**: https://manage.auth0.com/dashboard/" >> $GITHUB_STEP_SUMMARY
            else
              echo "- **Auth0 Staging Dashboard**: https://manage.auth0.com/dashboard/" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          # Add Firebase console URLs if Firebase sync was performed
          if [[ "${{ fromJson(needs.set_env.outputs.variables).firebase_sync_rc }}" == "true" ]]; then
            if [[ "${{ fromJson(needs.set_env.outputs.variables).firebase_dest_env }}" == "prod" ]]; then
              echo "- **Firebase Production Console**: https://console.firebase.google.com/project/${{ secrets.FB_PROJECT_ID_PROD }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Firebase Remote Config**: https://console.firebase.google.com/project/${{ secrets.FB_PROJECT_ID_PROD }}/config" >> $GITHUB_STEP_SUMMARY
            else
              echo "- **Firebase Staging Console**: https://console.firebase.google.com/project/${{ secrets.FB_PROJECT_ID_STAGE }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Firebase Remote Config**: https://console.firebase.google.com/project/${{ secrets.FB_PROJECT_ID_STAGE }}/config" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Sync Notes" >> $GITHUB_STEP_SUMMARY
          echo "- Triggered by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- Workflow: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "- Run ID: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          
          # Overall status
          if [[ "${{ needs.sync_data.result }}" != "success" && ("${{ fromJson(needs.set_env.outputs.variables).auth0_sync_tenant }}" == "true" || "${{ fromJson(needs.set_env.outputs.variables).firebase_sync_rc }}" == "true") ]]; then
            echo "\n❗ **Warning**: One or more synchronization operations failed. Review logs for details." >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ fromJson(needs.set_env.outputs.variables).auth0_sync_tenant }}" == "false" && "${{ fromJson(needs.set_env.outputs.variables).firebase_sync_rc }}" == "false" ]]; then
            echo "\nℹ️ **Info**: No synchronization operations were selected to run." >> $GITHUB_STEP_SUMMARY
          else
            echo "\n✅ **Success**: All selected synchronization operations completed successfully." >> $GITHUB_STEP_SUMMARY
          fi

  

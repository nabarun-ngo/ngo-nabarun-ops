name: '[Util] GCP Operations Manager'

on:
  workflow_dispatch:
    inputs:
      operation:
        description: 'Operation to perform'
        required: true
        type: choice
        options:
          - download-logs
          - restart-app-engine
          - cleanup-gcp-resources
        default: download-logs
      environment:
        description: 'Environment to operate on'
        required: true
        type: choice
        options:
          - stage
          - prod
        default: stage
      log_filter:
        description: 'Log filter'
        required: false
        type: string
        default: 'textPayload:"sample-filter"'
      log_output_format:
        description: 'Log output format'
        required: false
        type: choice
        options:
          - txt
          - csv
          - html
          - json
        default: 'txt'
      service_name:
        description: 'App Engine Service Name'
        required: false
        type: string
        default: 'default'
    

jobs:
  gcp-operations:
    name: 'Execute GCP Operation'
    uses: nabarun-ngo/ngo-nabarun-templates/.github/workflows/GCP-Ops.yml@main
    with:
      operation: ${{ inputs.operation }}
      environment: ${{ inputs.environment }}
      log_filter: ${{ inputs.log_filter }}
      output_format: ${{ inputs.log_output_format }}
      service_name: ${{ inputs.service_name }}
      confirm_restart: 'yes'
    secrets:
      project_id: ${{ secrets.GCP_PROJECT_ID }}
      gcp_sa_key: ${{ secrets.GCP_SA_KEY }}

  display-results:
    name: 'Display Operation Results'
    runs-on: ubuntu-latest
    needs: gcp-operations
    if: always()
    steps:
      - name: Generate Results Summary
        run: |
          echo "# ☁️ GCP Operations Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Basic operation info
          echo "## 📋 Operation Details" >> $GITHUB_STEP_SUMMARY
          echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Operation** | \`${{ inputs.operation }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Environment** | \`${{ inputs.environment }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Status** | ${{ needs.gcp-operations.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Timestamp** | $(date -u '+%Y-%m-%d %H:%M:%S UTC') |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Operation specific details
          if [ "${{ inputs.operation }}" = "download-logs" ]; then
            echo "## 📥 Download Logs Details" >> $GITHUB_STEP_SUMMARY
            echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
            echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| **Filter** | \`${{ inputs.log_filter }}\` |" >> $GITHUB_STEP_SUMMARY
            echo "| **Output Format** | \`${{ inputs.log_output_format }}\` |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ inputs.operation }}" = "restart-app-engine" ]; then
            echo "## 🔁 Restart App Engine Details" >> $GITHUB_STEP_SUMMARY
            echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
            echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| **Service** | \`${{ inputs.service_name }}\` |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
          elif [ "${{ inputs.operation }}" = "cleanup-gcp-resources" ]; then
            echo "## 🗑️ Cleanup GCP Resources Details" >> $GITHUB_STEP_SUMMARY
            echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
            echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| **Service** | \`${{ inputs.service_name }}\` |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Results section
          echo "## 📊 Operation Results" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ needs.gcp-operations.outputs.operation_result }}" ]; then
            echo "${{ needs.gcp-operations.outputs.operation_result }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Add specific metrics for different operations
            if [ "${{ inputs.operation }}" = "download-logs" ]; then
              echo "### 📈 Download Metrics" >> $GITHUB_STEP_SUMMARY
              if [ -n "${{ needs.gcp-operations.outputs.log_count }}" ]; then
                echo "- **Log Entries Retrieved:** ${{ needs.gcp-operations.outputs.log_count }}" >> $GITHUB_STEP_SUMMARY
              fi
              if [ -n "${{ needs.gcp-operations.outputs.execution_time }}" ]; then
                echo "- **Execution Time:** ${{ needs.gcp-operations.outputs.execution_time }}" >> $GITHUB_STEP_SUMMARY
              fi
              if [ -n "${{ needs.gcp-operations.outputs.output_path }}" ]; then
                echo "- **Output File:** \`${{ needs.gcp-operations.outputs.output_path }}\`" >> $GITHUB_STEP_SUMMARY
              fi
              echo "" >> $GITHUB_STEP_SUMMARY
            elif [ "${{ inputs.operation }}" = "restart-app-engine" ]; then
              echo "### 📈 Restart Metrics" >> $GITHUB_STEP_SUMMARY
              if [ -n "${{ needs.gcp-operations.outputs.instances_deleted }}" ]; then
                echo "- **Instances Deleted:** ${{ needs.gcp-operations.outputs.instances_deleted }}" >> $GITHUB_STEP_SUMMARY
              fi
              if [ -n "${{ needs.gcp-operations.outputs.instances_recreated }}" ]; then
                echo "- **Instances Now Running:** ${{ needs.gcp-operations.outputs.instances_recreated }}" >> $GITHUB_STEP_SUMMARY
              fi
              if [ -n "${{ needs.gcp-operations.outputs.service_status }}" ]; then
                echo "- **Service Status:** ${{ needs.gcp-operations.outputs.service_status }}" >> $GITHUB_STEP_SUMMARY
              fi
              if [ -n "${{ needs.gcp-operations.outputs.execution_time }}" ]; then
                echo "- **Execution Time:** ${{ needs.gcp-operations.outputs.execution_time }}" >> $GITHUB_STEP_SUMMARY
              fi
              echo "" >> $GITHUB_STEP_SUMMARY
            elif [ "${{ inputs.operation }}" = "cleanup-gcp-resources" ]; then
              echo "### 📈 Cleanup Metrics" >> $GITHUB_STEP_SUMMARY
              if [ -n "${{ needs.gcp-operations.outputs.cleanup_result }}" ]; then
                echo "- **Overall Result:** ${{ needs.gcp-operations.outputs.cleanup_result }}" >> $GITHUB_STEP_SUMMARY
              fi
              if [ -n "${{ needs.gcp-operations.outputs.resources_cleaned }}" ]; then
                echo "- **Resources Processed:** ${{ needs.gcp-operations.outputs.resources_cleaned }}" >> $GITHUB_STEP_SUMMARY
              fi
              if [ -n "${{ needs.gcp-operations.outputs.execution_time }}" ]; then
                echo "- **Execution Time:** ${{ needs.gcp-operations.outputs.execution_time }}" >> $GITHUB_STEP_SUMMARY
              fi
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "ℹ️ No operation results available" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Overall status and recommendations
          if [ "${{ needs.gcp-operations.result }}" = "success" ]; then
            echo "## ✅ Operation Completed Successfully" >> $GITHUB_STEP_SUMMARY
            echo "The GCP operation completed without errors." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ inputs.operation }}" = "download-logs" ]; then
              echo "### 📋 Next Steps" >> $GITHUB_STEP_SUMMARY
              echo "- Check the **Artifacts** section below to download the log file" >> $GITHUB_STEP_SUMMARY
              echo "- Review the log entries for any issues or patterns" >> $GITHUB_STEP_SUMMARY
              echo "- Consider adjusting the filter if you need more specific results" >> $GITHUB_STEP_SUMMARY
              if [ "${{ needs.gcp-operations.outputs.log_count }}" = "0" ]; then
                echo "- **Note:** No logs found - you may need to adjust your filter or time range" >> $GITHUB_STEP_SUMMARY
              fi
            elif [ "${{ inputs.operation }}" = "restart-app-engine" ]; then
              echo "### 📋 Next Steps" >> $GITHUB_STEP_SUMMARY
              echo "- Monitor your application for proper startup and functionality" >> $GITHUB_STEP_SUMMARY
              echo "- New instances will be created automatically when traffic arrives" >> $GITHUB_STEP_SUMMARY
              echo "- Check App Engine console for service health and instance status" >> $GITHUB_STEP_SUMMARY
              if [ "${{ needs.gcp-operations.outputs.instances_recreated }}" = "0" ]; then
                echo "- **Note:** No instances currently running (normal for auto-scaled services)" >> $GITHUB_STEP_SUMMARY
              fi
            elif [ "${{ inputs.operation }}" = "cleanup-gcp-resources" ]; then
              echo "### 📋 Next Steps" >> $GITHUB_STEP_SUMMARY
              echo "- Review the cleanup results above to ensure all operations completed successfully" >> $GITHUB_STEP_SUMMARY
              echo "- Check GCP Console to verify old resources have been removed" >> $GITHUB_STEP_SUMMARY
              echo "- Monitor your applications to ensure they're still functioning properly" >> $GITHUB_STEP_SUMMARY
              echo "- Consider adjusting retention policies if too many or too few resources were cleaned" >> $GITHUB_STEP_SUMMARY
              echo "- **Next cleanup:** Based on your settings, run this again when needed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "## ❌ Operation Failed" >> $GITHUB_STEP_SUMMARY
            echo "The GCP operation encountered errors. Please check the workflow logs for details." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🔧 Troubleshooting" >> $GITHUB_STEP_SUMMARY
            echo "1. Verify your GCP service account has the required permissions" >> $GITHUB_STEP_SUMMARY
            echo "2. Check that the project ID is correct and accessible" >> $GITHUB_STEP_SUMMARY
            echo "3. Ensure the log filter syntax is valid" >> $GITHUB_STEP_SUMMARY
            echo "4. Review the workflow logs for specific error messages" >> $GITHUB_STEP_SUMMARY
          fi

  

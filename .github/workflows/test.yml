name: '[Test] Run Automated Test'

run-name: "Running ${{ format('{0}', github.event.inputs.test_type || github.event.client_payload.test_type || 'Scheduled') }} Test in ${{ github.event.inputs.test_env || github.event.client_payload.test_env || 'stage' }} environment"

on:
  repository_dispatch:
    types: 
      - Trigger-Smoke-Test
      - Trigger-Test
      
  schedule:
    - cron: '30 18 * * 5'
    
  workflow_dispatch:
    inputs:
      test_env:
        required: true
        description: 'Test Environment'
        type: choice
        default: 'stage'
        options:
          - stage
      test_type:
        required: true
        description: 'Test Type'
        type: choice
        default: Regression
        options:
          - Regression
          - Smoke
      test_filter_tag_smoke:
        description: 'Smoke Test Tags'
        required: false
        type: string
        default: '@smoke'
      test_filter_tag_regression:
        description: 'Regression Test Tags'
        required: false
        type: string
        default: '@regression'
      smoke_matrix:
        description: 'Number of Smoke Tests per Job'
        required: false
        type: number
        default: 2
      regression_matrix:
        description: 'Number of Regression Tests per Job'
        required: false
        type: number
        default: 5

jobs:
  set_env:
    name: 'Setup Environment'
    uses: nabarun-ngo/ngo-nabarun-templates/.github/workflows/Setup-Env.yml@main
    with:
      inputs: ${{ toJson(inputs) }}
      client_payload: ${{ toJson(github.event.client_payload) }}

  run_automated_test_smoke:
    name: 'Run Smoke Tests '
    needs: set_env
    concurrency:
      group: smoke_test
      cancel-in-progress: ${{ fromJson(needs.set_env.outputs.variables).cancel_running_test || false }}
    uses: nabarun-ngo/ngo-nabarun-templates/.github/workflows/Run-Parallel-Tests.yml@main
    with:
      branch_name: ${{ fromJson(needs.set_env.outputs.variables).test_env == 'prod' && 'master' || 'stage' }}
      test_env: ${{ fromJson(needs.set_env.outputs.variables).test_env }}
      test_type: ${{ fromJson(needs.set_env.outputs.variables).test_type }}
      max_tests_per_matrix: ${{ inputs.smoke_matrix || 5 }}
      test_cucumber_tags: ${{ fromJson(needs.set_env.outputs.variables).test_filter_tag_smoke }}
      test_doppler_project_name: 'nabarun_test'
      upload_result: true
      app_ui_version: ${{ fromJson(needs.set_env.outputs.variables).fe_tag_name }}
      app_server_version:  ${{ fromJson(needs.set_env.outputs.variables).be_tag_name }}
      repository_name: 'nabarun-ngo/ngo-nabarun-test'
      test_cycle_folder: ${{ fromJson(needs.set_env.outputs.variables).test_env == 'prod' && vars.QMETRY_TEST_CYCLE_FOLDER_PROD || vars.QMETRY_TEST_CYCLE_FOLDER_STAGE }}
      test_case_folder: ${{ vars.QMETRY_TEST_CASE_FOLDER }}
      qmetry_project_id: ${{ vars.QMETRY_PROJECT_ID }}
      jira_url: ${{ vars.JIRA_URL }}

    secrets:
      test_doppler_service_token: ${{ fromJson(needs.set_env.outputs.variables).test_env == 'prod' && secrets.DOPPLER_TOKEN_NABARUN_TESTS_PROD || secrets.DOPPLER_TOKEN_NABARUN_TESTS_STAGE }}
      qmetry_api_key: ${{ secrets.QMETRY_APIKEY }}
      qmetry_open_api_key: ${{ secrets.QMETRY_OPEN_APIKEY }}

  run_automated_test_regression:
    name: 'Run Regression Tests'
    needs: set_env
    if: ${{ fromJson(needs.set_env.outputs.variables).test_type == 'Regression' }}
    concurrency:
      group: regression_test
      cancel-in-progress: false
    uses: nabarun-ngo/ngo-nabarun-templates/.github/workflows/Run-Parallel-Tests.yml@main
    with:
      branch_name: 'stage'
      test_env: 'stage'
      test_type: ${{ fromJson(needs.set_env.outputs.variables).test_type }}
      max_tests_per_matrix: ${{ inputs.smoke_matrix || 5 }}
      test_cucumber_tags: ${{ fromJson(needs.set_env.outputs.variables).test_filter_tag_regression }}
      test_doppler_project_name: 'nabarun_test'
      upload_result: true
      app_ui_version: ${{ fromJson(needs.set_env.outputs.variables).fe_tag_name }}
      app_server_version:  ${{ fromJson(needs.set_env.outputs.variables).be_tag_name }}
      repository_name: 'nabarun-ngo/ngo-nabarun-test'
      test_cycle_folder: ${{ vars.QMETRY_TEST_CYCLE_FOLDER_STAGE }}
      test_case_folder: ${{ vars.QMETRY_TEST_CASE_FOLDER }}
      qmetry_project_id: ${{ vars.QMETRY_PROJECT_ID }}
      jira_url: ${{ vars.JIRA_URL }}


    secrets:
      test_doppler_service_token: ${{ secrets.DOPPLER_TOKEN_NABARUN_TESTS_STAGE }}
      qmetry_api_key: ${{ secrets.QMETRY_APIKEY }}
      qmetry_open_api_key: ${{ secrets.QMETRY_OPEN_APIKEY }}
